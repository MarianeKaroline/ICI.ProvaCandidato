@model ICI.ProvaCandidato.Negocio.Models.Auth.RegistrarAuthModel

@{
    ViewData["Title"] = "Cadastro";
}

<div>

    @using (Html.BeginForm("Registrar", "Auth", FormMethod.Post, new { @class = "form" }))
    {
        @Html.ValidationSummary(true) 
        <div class="mb-3">
            <label for="email" class="form-label">Nome</label>
            @Html.TextBoxFor(t => t.Nome, "text", new { @class = "form-control", placeholder = "Nome", required = "required", maxLength = 250 })
            @Html.ValidationMessageFor(t => t.Nome, "", new { @class = "alert-danger"})
        </div>
        <div class="mb-3">
            <label for="email" class="form-label">E-mail</label>
            @Html.TextBoxFor(t => t.Email, "text", new { @class = "form-control", placeholder = "E-mail", required = "required", maxLength = 250 })
            @Html.ValidationMessageFor(t => t.Email, "", new { @class = "alert-danger"})
        </div>
        <div class="mb-3">
            <label for="senha" class="form-label">Senha</label>
            @Html.TextBoxFor(t => t.Senha, "password", new { @class = "form-control", type = "password", placeholder = "Senha", required = "required", maxLength = 50 })
            @Html.ValidationMessageFor(t => t.Senha, "", new { @class = "alert-danger"})
        </div>
        <button type="submit" class="btn btn-primary" id="salvar">Salvar</button>
    }

    @if (TempData["ErroMessage"] != null)
    {
        <div class="alert alert-danger" role="alert">
            @TempData["ErroMessage"]
        </div>
    }

</div>